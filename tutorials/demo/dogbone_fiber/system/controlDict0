/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     openInjMoldSimF;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.165;

deltaT          1e-6;

writeControl    adjustableRunTime;

writeInterval   0.005;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.2;

maxDeltaT       1e-3;

maxAlphaCo      0.05;

maxSolidCo      0.005;

pAuxRlx         0.1;//active when p = pMin

functions {

    injectionPressure   //Andrea : to monitor injection pressure
    {
        type surfaceFieldValue;
        functionObjectLibs ("libfieldFunctionObjects.so");
        //writeControl timeStep;
        writeInterval  5e-3;
        writeFields no;
        log true;
        valueOutput true;
        regionType patch;
        surfaceFormat off;
        verbose true;
        name inlet; // replace this with your boundary patch name
        operation areaAverage;

        fields
            (
            p
            );
    }

        //Andrea - monitoring residuals
	residuals
	{
		type   residuals;
		functionObjectLibs   ("libutilityFunctionObjects.so");
		enabled   true;
		writeControl   timeStep;
		writeInterval   1;
		fields   (p_rgh T elSigDev );
	}

    minMaxp
    {
        type        fieldMinMax;
        functionObjectLibs ("libfieldFunctionObjects.so");
        fields
        (
             p p_rgh pAux T Tc shrRate visc U
        );
        write yes;
        log yes;
        mode magnitude;
        location        yes;
        writeControl    timeStep;
        writeInterval   10;
    }

    Co1
    {
        // Mandatory entries (unmodifiable)
        type            CourantNo;
        functionObjectLibs ("libfieldFunctionObjects.so");

        // Optional entries (runtime modifiable)
        //rho             rho;

        // Optional (inherited) entries
        //field           <phi>;
        //result          <fieldResult>;
        //region          region0;
        //enabled         true;
        //log             true;
        //timeStart       0;
        //timeEnd         1000;
          executeControl  writeTime;
        //executeInterval 1;
          writeControl    writeTime;
    }
}

// ************************************************************************* //
